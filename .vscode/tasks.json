{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Current Project",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-build-project.ps1",
                "-ProjectDir",
                "${fileDirname}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Build and Simulate without ELPM",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-build-simulide.ps1",
                "-ProjectDir",
                "${fileDirname}"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Program Current Project",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-program-project.ps1",
                "-ProjectDir",
                "${fileDirname}",
                "-Programmer",
                "arduino"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Generate HEX File",
            "type": "shell",
            "command": "${workspaceFolder}\\tools\\avr-toolchain\\bin\\avr-objcopy.exe",
            "args": [
                "-O",
                "ihex",
                "-R",
                ".eeprom",
                "Main.elf",
                "Main.hex"
            ],
            "group": "build",
            "options": {
                "cwd": "${fileDirname}"
            },
            "dependsOn": "Build Current Project",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Build and Generate HEX",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Build Current Project",
                "Generate HEX File"
            ],
            "group": "build"
        },
        {
            "label": "Program with Custom Programmer",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-program-project.ps1",
                "-Programmer",
                "${input:programmerType}"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Build and Program Current Project",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Build Current Project",
                "Program Current Project"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Show Memory Usage",
            "type": "shell",
            "command": "${workspaceFolder}\\tools\\avr-toolchain\\bin\\avr-size.exe",
            "args": [
                "--format=berkeley",
                "${fileBasenameNoExtension}.elf"
            ],
            "group": "build",
            "options": {
                "cwd": "${fileDirname}"
            },
            "dependsOn": "Build Current Project",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Clean Current Project",
            "type": "shell",
            "command": "Remove-Item",
            "args": [
                "-Path",
                "*.o,*.elf,*.hex,*.map",
                "-Force",
                "-ErrorAction",
                "SilentlyContinue"
            ],
            "group": "build",
            "options": {
                "cwd": "${fileDirname}",
                "shell": {
                    "executable": "pwsh.exe"
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Build All Projects",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-build-all.ps1",
                "-TestAll"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Open Serial Monitor",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Write-Host 'Available COM ports:' -ForegroundColor Green; [System.IO.Ports.SerialPort]::getportnames() | ForEach-Object { Write-Host \"  $_\" -ForegroundColor Yellow }; Write-Host 'Enter COM port (e.g., COM3):' -ForegroundColor Green; $port = Read-Host; Write-Host \"Starting serial monitor on $port at 9600 baud...\" -ForegroundColor Green; Write-Host 'Press Ctrl+C to exit' -ForegroundColor Yellow; $serialPort = New-Object System.IO.Ports.SerialPort($port, 9600); try { $serialPort.Open(); Write-Host \"Connected to $port\" -ForegroundColor Green; while($true) { if($serialPort.BytesToRead -gt 0) { Write-Host $serialPort.ReadExisting() -NoNewline } Start-Sleep -Milliseconds 10 } } catch { Write-Host \"Error: $_\" -ForegroundColor Red } finally { if($serialPort.IsOpen) { $serialPort.Close() } }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "isBackground": true
        },
        {
            "label": "Test System",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-test-system.ps1",
                "-Interactive"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Analyze Code Quality",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-analyze-code.ps1",
                "-ProjectPath",
                "${fileDirname}"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Create New Project",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\cli\\cli-new-project.ps1"
            ],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Simulate in SimulIDE (Current Project)",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\simulide\\cli-simulide.ps1",
                "-ProjectDir",
                "${fileDirname}"
            ],
            "group": "test",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Build and Simulate Current Project",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Build and Simulate without ELPM (SimulIDE)"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Build and Simulate without ELPM (SimulIDE)",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Build and Simulate without ELPM",
                "Simulate in SimulIDE (Current Project)"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "Open SimulIDE Circuit Editor",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\tools\\simulide\\open-circuit-editor.ps1",
                "-WorkspaceRoot",
                "${workspaceFolder}"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        }
    ],
    "inputs": [
        {
            "id": "programmerType",
            "description": "Select programmer type",
            "type": "pickString",
            "options": [
                "usbasp",
                "arduino",
                "avrisp",
                "stk500v2"
            ],
            "default": "usbasp"
        }
    ]
}